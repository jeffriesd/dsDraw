define marker(A) {
  a = arrow();
  x = A.x();
  y1 = A.y() - 50;
  y2 = A.y();
  a.setTail(x, y1);
  a.setHead(x, y2);
  a.straighten();
  return a;
}

define colorArray(A, i, mkr) {
  A[:i].bg = "pink";
  for (j = 0; j < i; j = j + 1) {
    if (A[j].value >= A[i].value) { 
      A[j].bg = "gray"; 
    }
  }
  A[i].bg = "red";
  moveTo(mkr, A.x() + i * A.cs, mkr.y());
}

define highlightTree(tnode, color) {
  if (tnode == null) { return null; }
  tnode.bg = color;
  highlightTree(tnode.left(), color);
  highlightTree(tnode.right(), color);
}

define update() {
  repaint();
  wait(1000);
}

define splay(T, x) {
  T[:].bg = "white";
  tnode = T.find(x);
  tnode.bg = "red";
  while (tnode != T.root()) {
    tnode.rotate();
    update();
  }
  highlightTree(tnode.left(), "pink");
  highlightTree(tnode.right(), "gray");
}

define treeSubSeq(A) {
  arr = array(A);
  n = A.length();
  T = bst([A[0]]);
  translate(T, 140, 100);
  wait(1000);

  mkr = marker(arr);
  L = [0] * n;
  L[0] = 1;

  aug = {};
  for (i = 1; i < n; i = i + 1) {
    colorArray(arr, i, mkr);
    update();

    T.insert(A[i]);
    splay(T, A[i]);
    update();
  }
} 

treeSubSeq([10, 22, 9, 33, 21, 50, 41, 60]);


